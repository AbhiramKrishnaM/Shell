----------------------------------------------------------------
SHUTTING DOWN system

halt - brings the system down immediately

int 0 - powers off the system using predefined scripts to synchronize and clean up the sytem prior to shutting down

int 6 - reboots the system by shutting it down completely and then restarting int

poweroff - shuts down the system by powering off

reboot - reboots the system

shutdown - shuts down the system

----------------------------------------------------------------
MANAGING FILE system

eg:- -rw-r--r--

-  - regular file such as an ASCII text file, binary executable, or hard link

b - Block special file. Block input/output device file such as a physical hard drive.

c - character special file. raw input/output device file such as a physical hard drive

d -  directory file that contains a listing of other files and directories

l - symbolic link file. links on any regular file.

p - named pipe. A mechanism for interprocess communication

s - socket used for interprocess communication.



counting words in a file 

[ wc filename ] 

-----------------------------------------------------------------
DIRECTORIES 

[ cd - ]  - to go in your last directory, you can use the following command


creating parent directories

[ mkdir -p /tmp/amrood/test ] - if parent directory does not exist then its throws an error when you try to put another directory or file inside it. use -p with mkdir to avoid this

------------------------------------------------------------------
FILE Permissions

[ chmod ]

symbolic mode

+  - adds the designated permissions to a file or directory

- - removes the designated permissions from a file or directory

= - sets the designated permissions


Absolute permission

0 	No permission 	---
1 	Execute permission 	--x
2 	Write permission 	-w-
3 	Execute and write permission: 1 (execute) + 2 (write) = 3 	-wx
4 	Read permission 	r--
5 	Read and execute permission: 4 (read) + 1 (execute) = 5 	r-x
6 	Read and write permission: 4 (read) + 2 (write) = 6 	rw-
7 	All permissions: 4 (read) + 2 (write) + 1 (execute) = 7 	rwx





chown − The chown command stands for "change owner" and is used to change the owner of a file.

chgrp − The chgrp command stands for "change group" and is used to change the group of a file.

eg - [ $ chown amrood testfile ]


NOTE − The super user, root, has the unrestricted capability to change the ownership of any file but normal users can change the ownership of only those files that they own.

------------------------------------------------------------------
ENVIRONMENT Variables



1 	DISPLAY: Contains the identifier for the display that X11 programs should use by default.

2 	HOME: Indicates the home directory of the current user: the default argument for the cd built-in command.

3 	IFS: Indicates the Internal Field Separator that is used by the parser for word splitting after expansion.

4 	LANG: LANG expands to the default system locale; LC_ALL can be used to override this. For example, if its value is pt_BR, then the language is set to (Brazilian) Portuguese and the locale to Brazil.

5 	LD_LIBRARY_PATH: A Unix system with a dynamic linker, contains a colonseparated list of directories that the dynamic linker should search for shared objects when building a process image after exec, before searching in any other directories.

6 	PATH: Indicates the search path for commands. It is a colon-separated list of directories in which the shell looks for commands.

7 	PWD: Indicates the current working directory as set by the cd command.

8 	RANDOM: Generates a random integer between 0 and 32,767 each time it is referenced.

9 	SHLVL: Increments by one each time an instance of bash is started. This variable is useful for determining whether the built-in exit command ends the current session.

10 	TERM: Refers to the display type.

11 	TZ: Refers to Time zone. It can take values like GMT, AST, etc.

12 	UID: Expands to the numeric user ID of the current user, initialized at the shell startup.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

BASIC Utilities

[ pr option(s) filename(s) ]


Sr.No. 	Option & Description
1 	-k   Produces k columns of output

2 	-d   Double-spaces the output (not on all pr versions)

3 	-h "header"  Takes the next item as a report header

4 	-t  Eliminates the printing of header and the top/bottom margins

5 	-l PAGE_LENGTH  Sets the page length to PAGE_LENGTH (66) lines. The default number of lines of text is 56

6 	-o MARGIN Offsets each line with MARGIN (zero) spaces

7 	-w PAGE_WIDTH Sets the page width to PAGE_WIDTH (72) characters for multiple text-column output only


Sending EMAIL

[ $mail [-s subject] [-c cc-addr] [-b bcc-addr] to-addr ]

Sr.No. 	Option & Description
1 	-s Specifies subject on the command line.

2 	-c Sends carbon copies to the list of users. List should be a commaseparated list of names.

3 	-b Sends blind carbon copies to list. List should be a commaseparated list of names.


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

PIPES AND FILTERS

eg:- [ ls -l | grep "Aug" ]


Sr.No. 	Option & Description
1 	-v Prints all lines that do not match pattern.

2 	-n Prints the matched line and its line number.

3 	-l Prints only the names of files with matching lines (letter "l")

4 	-c Prints only the count of matching lines.

5 	-i Matches either upper or lowercase.
